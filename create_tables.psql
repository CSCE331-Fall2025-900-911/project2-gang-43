    DROP TABLE order_item;
    DROP TABLE item_ingredient;
    DROP TABLE items;
    DROP TABLE ingredients;
    DROP TABLE orders;
    DROP TABLE employees;
    DROP TYPE employee_role, size_type;

CREATE TYPE size_type AS ENUM ('large', 'medium', 'small');
CREATE TABLE items (
    item_id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    price NUMERIC(10,2) NOT NULL,
    available BOOLEAN,
    size size_type NOT NULL
);

CREATE TABLE ingredients (
    ingredient_id SERIAL PRIMARY KEY,
    ingredient_name VARCHAR NOT NULL,
    stock_quantity INTEGER NOT NULL,
    unit_measurement VARCHAR NOT NULL,
    reorder_level INTEGER
);

CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    order_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    order_total NUMERIC(10,2) NOT NULL
);

CREATE TABLE order_item (
    order_id INT NOT NULL REFERENCES Orders(Order_ID) ON DELETE CASCADE,
    item_id INT NOT NULL REFERENCES Items(Item_ID) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (Quantity > 0),
    item_price NUMERIC(10,2) NOT NULL,
    PRIMARY KEY (Order_ID, Item_ID)
);

CREATE TYPE employee_role AS ENUM ('cashier', 'manager');
CREATE TABLE employees (
    employee_id SERIAL PRIMARY KEY,
    employee_name VARCHAR NOT NULL,
    role employee_role NOT NULL,
    active BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE item_ingredient (
    item_id INT NOT NULL REFERENCES Items(Item_ID) ON DELETE CASCADE,
    ingredient_id INT NOT NULL REFERENCES Ingredients(Ingredient_ID) ON DELETE CASCADE,
    quantity NUMERIC(10,2) NOT NULL CHECK (Quantity > 0),
    PRIMARY KEY (Item_ID, Ingredient_ID)
);
