CREATE TYPE size_type AS ENUM ('Large', 'Medium', 'Small', 'Standard');
CREATE TABLE Item (
    Item_ID SERIAL PRIMARY KEY,
    Name VARCHAR NOT NULL,
    Price NUMERIC(10,2) NOT NULL,
    Available BOOLEAN,
    Size size_type NOT NULL
);

CREATE TABLE Ingredient (
    Ingredient_ID SERIAL PRIMARY KEY,
    Ingredient_Name VARCHAR NOT NULL,
    Stock_Quantity INTEGER NOT NULL,
    Unit_Measurement VARCHAR NOT NULL,
    Reorder_Level INTEGER
);

CREATE TYPE order_status AS ENUM ('pending', 'completed');
CREATE TABLE Orders (
    Order_ID SERIAL PRIMARY KEY,
    Order_Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Order_Total NUMERIC(10,2) NOT NULL,
    Order_Status order_status NOT NULL DEFAULT 'pending'
);

CREATE TABLE Order_Item (
    Order_ID INT NOT NULL REFERENCES Orders(Order_ID) ON DELETE CASCADE,
    Item_ID INT NOT NULL REFERENCES Item(Item_ID) ON DELETE CASCADE,
    Quantity INTEGER NOT NULL CHECK (Quantity > 0),
    Item_Price NUMERIC(10,2) NOT NULL,
    PRIMARY KEY (Order_ID, Item_ID)
);

CREATE TYPE employee_role AS ENUM ('Cashier', 'Manager');
CREATE TABLE Employee (
    Employee_ID SERIAL PRIMARY KEY,
    Employee_Name VARCHAR NOT NULL,
    Role employee_role NOT NULL,
    Active BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE Item_Ingredient (
    Item_ID INT NOT NULL REFERENCES Item(Item_ID) ON DELETE CASCADE,
    Ingredient_ID INT NOT NULL REFERENCES Ingredient(Ingredient_ID) ON DELETE CASCADE,
    Quantity NUMERIC(10,2) NOT NULL CHECK (Quantity > 0),
    PRIMARY KEY (Item_ID, Ingredient_ID)
);
