-- Add new ingredients (new ingredient required)
INSERT INTO ingredients (ingredient_id, ingredient_name, stock_quantity, unit_measurement, reorder_level)
VALUES (99192, 'Fruit Tapioca', 20, 'Cups', 10);

-- Add item (new item!)
INSERT INTO items (item_id, name, price, available, size)
VALUES (5678, 'Pumpkin Spice Milk Tea', 6.89, True, 'medium');

-- Create new order (order placed)
INSERT INTO orders (order_id, order_timestamp, order_total)
VALUES (2126, '2021-01-21 17:38:00', 28.01);

-- Add items to existing order
INSERT INTO order_item (order_id, item_id, quantity, item_price)
VALUES (2126, 5678, 2, 13.78);

-- Change quantity of ordered items
UPDATE order_item
SET quantity = 1
WHERE order_id = 2126 AND item_id = 5678;

-- Decrement inventory (post-order)
UPDATE ingredients
SET stock_quantity = stock_quantity - 1
WHERE ingredient_id = 99192;

-- Increment inventory (shipment)
UPDATE ingredients
SET stock_quantity = stock_quantity + 100
WHERE ingredient_id = 99192;

-- Add employee (new hire)
INSERT INTO employees (employee_id, employee_name, role, active)
VALUES (67, 'Walter White', 'manager', TRUE);   

-- Remove employee (fired/left)
UPDATE employees
SET active = FALSE
WHERE employee_id = 67;


-- Delete existing order (cancel order)
DELETE FROM orders
WHERE order_id = 2126;

-- Update item to be unavaliable (out of stock)
UPDATE items
SET available = FALSE
WHERE item_id = 5678;

-- Change price of item
UPDATE items
SET price = 7.00
WHERE item_id = 5678;

-- Show ingredients that need reordering
SELECT ingredient_name, stock_quantity, reorder_level
FROM ingredient
WHERE stock_quantity < reorder_level;

-- List all active employees that are managers
SELECT employee_name, employee_id
FROM employees
<<<<<<< HEAD
WHERE role = 'manager' AND active = TRUE;  


-- Sum Prices
SELECT SUM(Order_Total)
FROM orders

SELECT Order_Timestamp
FROM orders
ORDER BY Order_Timestamp ASC;

SELECT Order_Timestamp
FROM orders
ORDER BY Order_Timestamp DESC;
=======
WHERE role = 'manager' AND active = TRUE;

-- Special Query #1: "Weekly Sales History"
 SELECT 
    DATE_TRUNC('week', order_timestamp) AS week_start,
    COUNT(*) AS order_count
FROM 
    orders
GROUP BY 
    DATE_TRUNC('week', order_timestamp)
ORDER BY 
    week_start;

-- Special Query #2: "Realistic Sales History"
SELECT 
    DATE_TRUNC('hour', order_timestamp) AS hour_start,
    COUNT(*) AS order_count,
    SUM(order_total) AS total_sales
FROM 
    orders
GROUP BY 
    DATE_TRUNC('hour', order_timestamp)
ORDER BY 
    hour_start;

-- Special Query #3: "Peak Sales Day"
SELECT 
    DATE(order_timestamp) AS sales_day,
    SUM(order_total) AS daily_total
FROM 
    orders
GROUP BY 
    DATE(order_timestamp)
ORDER BY 
    daily_total DESC
LIMIT 10;
>>>>>>> 2a4c23a32556487b74c8b62dd531844758aa3a44
